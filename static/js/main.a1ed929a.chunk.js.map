{"version":3,"sources":["components/Card/cat-pattern.png","images sync nonrecursive /.(png|jpe?g|svg)$","images/Angeweena-Joween.jpg","images/Birdie.jpg","images/Breakfast.jpg","images/Chumba.jpg","images/Cleo.jpg","images/Dinner.jpg","images/Fartima.jpg","images/Franklin.jpg","images/Holla.jpg","images/Liam.jpg","images/Liberace.jpg","images/Lunch.jpg","images/Meatloaf.jpg","images/Nacho.jpg","images/Noodle.jpg","images/Nutella.jpg","images/Tony.jpg","images/Ween.jpg","images/Wumba.jpg","cats.js","components/Card/Card.jsx","utils.js","components/GameStart/GameStart.jsx","components/Scoreboard/Scoreboard.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./Angeweena-Joween.jpg","./Birdie.jpg","./Breakfast.jpg","./Chumba.jpg","./Cleo.jpg","./Dinner.jpg","./Fartima.jpg","./Franklin.jpg","./Holla.jpg","./Liam.jpg","./Liberace.jpg","./Lunch.jpg","./Meatloaf.jpg","./Nacho.jpg","./Noodle.jpg","./Nutella.jpg","./Tony.jpg","./Ween.jpg","./Wumba.jpg","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","r","Card","_ref","catImage","catName","cardClickHandler","catIndex","flipped","react_default","a","createElement","className","onClick","src","alt","cardBack","images","require","findCatImage","name","find","image","includes","cats","selected","matched","difficultyOptions","label","value","catCount","doubleShuffle","numCats","catsArray","sort","Math","random","slice","truncateCats","concat","GameStart","resetGame","score","_useState","useState","_useState2","slicedToArray","difficulty","setDifficulty","d","key","type","checked","onChange","Scoreboard","App","selectedCount","setSelectedCount","_useState3","_useState4","blockClicks","setBlockClicks","_useState5","_useState6","setCats","_useState7","_useState8","setScore","unmatchedCatCount","filter","cat","length","updatedCount","updatedCats","index","objectSpread","selectedCats","setTimeout","arguments","undefined","components_Scoreboard_Scoreboard","components_Card_Card","components_GameStart_GameStart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1ed929a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat-pattern.f6cc3aa1.png\";","var map = {\n\t\"./Angeweena-Joween.jpg\": 15,\n\t\"./Birdie.jpg\": 16,\n\t\"./Breakfast.jpg\": 17,\n\t\"./Chumba.jpg\": 18,\n\t\"./Cleo.jpg\": 19,\n\t\"./Dinner.jpg\": 20,\n\t\"./Fartima.jpg\": 21,\n\t\"./Franklin.jpg\": 22,\n\t\"./Holla.jpg\": 23,\n\t\"./Liam.jpg\": 24,\n\t\"./Liberace.jpg\": 25,\n\t\"./Lunch.jpg\": 26,\n\t\"./Meatloaf.jpg\": 27,\n\t\"./Nacho.jpg\": 28,\n\t\"./Noodle.jpg\": 29,\n\t\"./Nutella.jpg\": 30,\n\t\"./Tony.jpg\": 31,\n\t\"./Ween.jpg\": 32,\n\t\"./Wumba.jpg\": 33\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14;","module.exports = __webpack_public_path__ + \"static/media/Angeweena-Joween.a38c2740.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Birdie.9ab76da2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Breakfast.a06222af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Chumba.7a100649.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Cleo.5a666bd9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Dinner.8e0cb1f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Fartima.7e9783b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Franklin.f8d91172.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Holla.7509d76c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Liam.db01fabe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Liberace.a8f45f1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Lunch.0631650a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Meatloaf.dd9e28eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Nacho.73b19512.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Noodle.2cc132f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Nutella.effbd03e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tony.90d9ad6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ween.0996506c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Wumba.01bc7944.jpg\";","const importAll = r => r.keys().map(r)\r\n\r\nconst images = importAll(require.context('./images', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nconst findCatImage = name => images.find(image => image.includes(name))\r\n\r\nexport const cats = [{\r\n    catImage: findCatImage(\"Angeweena-Joween\"),\r\n    catName: \"Angeweena Joween\",\r\n    selected: false,\r\n    matched: false\r\n}, {\r\n    \"catImage\": findCatImage(\"Birdie\"),\r\n    \"catName\": \"Birdie\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Breakfast\"),\r\n    \"catName\": \"Breakfast\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Chumba\"),\r\n    \"catName\": \"Chumba\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Cleo\"),\r\n    \"catName\": \"Cleo\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Dinner\"),\r\n    \"catName\": \"Dinner\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Fartima\"),\r\n    \"catName\": \"Fartima\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Franklin\"),\r\n    \"catName\": \"Franklin\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Holla\"),\r\n    \"catName\": \"Holla\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Liam\"),\r\n    \"catName\": \"Liam\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Liberace\"),\r\n    \"catName\": \"Liberace\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Lunch\"),\r\n    \"catName\": \"Lunch\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Meatloaf\"),\r\n    \"catName\": \"Meatloaf\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Nacho\"),\r\n    \"catName\": \"Nacho\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Noodle\"),\r\n    \"catName\": \"Noodle\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Nutella\"),\r\n    \"catName\": \"Nutella\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Tony\"),\r\n    \"catName\": \"Tony\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Ween\"),\r\n    \"catName\": \"Ween\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Wumba\"),\r\n    \"catName\": \"Wumba\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}]\r\n\r\nexport default cats","import React from \"react\";\r\n\r\nimport cardBack from \"./cat-pattern.png\"\r\n\r\nimport './Card.scss'\r\n\r\nconst Card = ({catImage, catName, cardClickHandler, catIndex, flipped}) => {\r\n    // State and state set function. useState is a function that gets passed an initial value and returns an array of the state (flipped) and a function to update the state (setFlipped)\r\n    // const [flipped, setFlipped] = useState(false)\r\n    // Only flip cards face up, not face down\r\n    const flipCard = () => {\r\n        if (!flipped) {\r\n            // setFlipped(true)\r\n            cardClickHandler(catIndex)\r\n        }\r\n        // TODO: Add else statement warning for already been clicked\r\n    }\r\n\r\n    return (\r\n        <div className=\"Card\" onClick={flipCard}>\r\n            {flipped ? (\r\n                <div className=\"Card__box\">\r\n                    <img className=\"Card__image\" src={catImage} alt='card-back' />\r\n                    <p className=\"Card__name\">{catName}</p>\r\n                </div>\r\n            ) : (\r\n                <img className=\"Card__image\" src={cardBack} alt={catName} />                    \r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import catsArray from \"./cats\"\r\n\r\nexport const difficultyOptions = [\r\n   {\r\n      label: 'Easy',\r\n      value: 'easy',\r\n      catCount: 5\r\n   }, {\r\n      label: 'Medium',\r\n      value: 'medium',\r\n      catCount: 10\r\n   }, {\r\n      label: 'Hard',\r\n      value: 'hard',\r\n      catCount: 15\r\n   }\r\n]\r\n\r\n// Randomizes cats array and truncates it based on numCats\r\nexport const truncateCats = numCats => {\r\n   const randCats = catsArray.sort(() => 0.5 - Math.random())\r\n   return randCats.slice(0, numCats)\r\n}\r\n\r\n// Doubles the array to create matches and randomizes the order of display\r\nexport const doubleShuffle = numCats => {\r\n   const cats = truncateCats(numCats)\r\n   const doubleCats = cats.concat(cats)\r\n   return doubleCats.sort(() => 0.5 - Math.random())\r\n}","import React, {useState} from \"react\"\r\n\r\nimport {difficultyOptions} from \"../../utils\"\r\n\r\nimport './GameStart.scss'\r\n\r\nconst GameStart = ({resetGame, score}) => {\r\n    const [difficulty, setDifficulty] = useState('easy')\r\n    return (\r\n        <div className=\"GameStart\">\r\n            {score ? (\r\n                <div>\r\n                    <h1>CONGRATULATIONS!! You won!</h1>\r\n                    <h2>Final Score: {score}</h2>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h1>Kitten Matching Game</h1>\r\n                    <h2>A feline friendly game made with React</h2>\r\n                </div>\r\n            )}\r\n\r\n            <form className=\"GameStart__difficulty-radio-buttons\">\r\n                {difficultyOptions.map(d => (\r\n                    <div key={d.label} className=\"GameStart__difficulty-radio-buttons__container\">\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"difficulty\"\r\n                                value={d.label}\r\n                                checked={d.value === difficulty}\r\n                                onChange={() => setDifficulty(d.value)}\r\n                            />\r\n                            {d.label}\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </form>      \r\n\r\n            <button onClick={() => resetGame(difficultyOptions.find(d => d.value === difficulty).catCount)}>Play{!!score && \" Again\"}</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameStart","import React from \"react\"\r\n\r\nimport './Scoreboard.scss'\r\n\r\nconst Scoreboard = ({score}) => {\r\n    return (\r\n        <div className=\"Scoreboard\">\r\n            <h2>Flip the cards to match the cats</h2>\r\n            <h3>Score: {score}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scoreboard   ","import React, {useState} from 'react'\r\n\r\nimport Card from \"./components/Card/Card\"\r\nimport GameStart from \"./components/GameStart/GameStart\"\r\nimport Scoreboard from \"./components/Scoreboard/Scoreboard\"\r\nimport {doubleShuffle} from \"./utils\"\r\n\r\nimport './App.scss'\r\n\r\nconst App = () => {\r\n  const [selectedCount, setSelectedCount] = useState(0)\r\n  const [blockClicks, setBlockClicks] = useState(false)\r\n  const [cats, setCats] = useState([])\r\n  const [score, setScore] = useState(0)\r\n\r\n  const unmatchedCatCount = cats.filter(cat => !cat.matched).length\r\n\r\n  const cardClickHandler = (catIndex) => {\r\n    if (blockClicks) return\r\n    let updatedCount = selectedCount + 1\r\n    setSelectedCount(updatedCount)\r\n    let updatedCats = cats.map((cat, index) => catIndex === index ? {...cat, selected: true} : cat)\r\n    setCats(updatedCats)\r\n    // Update the cats array\r\n    // ... is a spread function, it adds everything that it had before back into the object. \r\n    // Then, we update only flipped. Because if you redefine something that's already there, it overwrites it.\r\n    if (updatedCount === 2) {\r\n      // Make a new array that only has the flipped cats\r\n      const selectedCats = updatedCats.filter(cat => cat.selected)\r\n\r\n      // If it's a match:\r\n      if (selectedCats[0].catName === selectedCats[1].catName) {\r\n        // Set matched to true for the selected cats\r\n        updatedCats = updatedCats.map(cat => cat.selected ? {...cat, selected: false, matched: true} : cat)\r\n        updatedCount = 0\r\n        setCats(updatedCats)\r\n        setSelectedCount(updatedCount)\r\n        setScore(score + 20)\r\n\r\n      // If it's not a match:\r\n      } else {\r\n        setBlockClicks(true)\r\n        setScore(score - 10)\r\n        setTimeout(() => {\r\n          setBlockClicks(false)\r\n          updatedCats = updatedCats.map(cat => cat.selected ? {...cat, selected: false} : cat)\r\n          updatedCount = 0\r\n          setCats(updatedCats)\r\n          setSelectedCount(updatedCount)\r\n        }, 2000)\r\n      }\r\n    } \r\n  }\r\n\r\n  const resetGame = (numCats = 10) => {\r\n    setScore(0)\r\n    setSelectedCount(0)\r\n    setCats(doubleShuffle(numCats))\r\n    setBlockClicks(false)\r\n  }\r\n\r\n  if (!unmatchedCatCount) {\r\n    return (\r\n      <GameStart\r\n        score={score}\r\n        resetGame={resetGame}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App__header\">\r\n        <h1>Kitten Matching Game</h1>\r\n        <Scoreboard\r\n          score={score} \r\n        />\r\n        <button onClick={resetGame}>Reset Game</button>\r\n      </div>\r\n      <div className=\"App__card-container\">\r\n        {cats.map((cat, index) => {\r\n          return (\r\n            <Card \r\n              catName={cat.catName}\r\n              catImage={cat.catImage}\r\n              flipped={cat.selected || cat.matched}\r\n              cardClickHandler={cardClickHandler}\r\n              catIndex={index}\r\n              key={index}\r\n            />\r\n        )})}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n// TODO: put image captions on cards\r\n//\r\n// Easy/Medium/Hard levels based on how many images are chosen at random from the array to be in the game.\r\n\r\n// Future improvements:\r\n// - Difficulty levels\r\n// - Timer\r\n// - Printable certificate for winning","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}