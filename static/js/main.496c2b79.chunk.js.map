{"version":3,"sources":["components/Card/cat-pattern.png","images sync nonrecursive /.(png|jpe?g|svg)$","images/Angeweena-Joween.jpg","images/Birdie.jpg","images/Breakfast.jpg","images/Chumba.jpg","images/Cleo.jpg","images/Cookie.jpg","images/Cupcake.jpg","images/Dinner.jpg","images/Fartima.jpg","images/Franklin.jpg","images/Holla.jpg","images/Liam.jpg","images/Liberace.jpg","images/Lunch.jpg","images/Meatloaf.jpg","images/Nacho.jpg","images/Noodle.jpg","images/Nutella.jpg","images/Tony.jpg","images/Ween.jpg","images/Wumba.jpg","cats.js","components/Leaderboard/Leaderboard.jsx","utils.js","components/Card/Card.jsx","components/GameEnd/GameEnd.jsx","components/Game/Game.jsx","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./Angeweena-Joween.jpg","./Birdie.jpg","./Breakfast.jpg","./Chumba.jpg","./Cleo.jpg","./Cookie.jpg","./Cupcake.jpg","./Dinner.jpg","./Fartima.jpg","./Franklin.jpg","./Holla.jpg","./Liam.jpg","./Liberace.jpg","./Lunch.jpg","./Meatloaf.jpg","./Nacho.jpg","./Noodle.jpg","./Nutella.jpg","./Tony.jpg","./Ween.jpg","./Wumba.jpg","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","r","Leaderboard","_ref","highScores","react_default","a","createElement","Fragment","className","row","index","key","name","score","images","require","findCatImage","find","image","includes","cats","catImage","catName","selected","matched","difficultyOptions","label","value","catCount","doubleShuffle","numCats","catsArray","sort","Math","random","slice","truncateCats","concat","Card","cardClickHandler","catIndex","flipped","onClick","src","alt","cardBack","GameEnd","leaderBoard","newHighScorePlace","setGamePlay","_useState","useState","_useState2","slicedToArray","leaderName","setLeaderName","_useState3","_useState4","showEnterInitials","setShowEnterInitials","useEffect","console","log","htmlFor","autoFocus","maxLength","onChange","target","localStorage","setItem","JSON","stringify","Game","selectedCount","setSelectedCount","blockClicks","setBlockClicks","_useState5","_useState6","setCats","_useState7","_useState8","setScore","unmatchedCatCount","filter","cat","length","updatedCount","updatedCats","objectSpread","selectedCats","setTimeout","parse","getItem","push","b","findIndex","leader","components_GameEnd_GameEnd","components_Card_Card","App","difficulty","setDifficulty","gamePlay","components_Game_Game","d","type","checked","components_Leaderboard_Leaderboard","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kICAxC,IAAAC,EAAA,CACAC,yBAAA,GACAC,eAAA,GACAC,kBAAA,GACAC,eAAA,GACAC,aAAA,GACAC,eAAA,GACAC,gBAAA,GACAC,eAAA,GACAC,gBAAA,GACAC,iBAAA,GACAC,cAAA,GACAC,aAAA,GACAC,iBAAA,GACAC,cAAA,GACAC,iBAAA,GACAC,cAAA,GACAC,eAAA,GACAC,gBAAA,GACAC,aAAA,GACAC,aAAA,GACAC,cAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAzB,EAAA0B,GAEA,SAAAC,EAAAF,GACA,IAAAzB,EAAA4B,EAAA1B,EAAAuB,GAAA,CACA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAA3B,EAAAuB,GAEAD,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAA9B,IAEAsB,EAAAU,QAAAP,EACA7B,EAAAC,QAAAyB,EACAA,EAAAE,GAAA,oBC1CA5B,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mJCAtBkC,iDCsBHC,SAlBK,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,WAAF,OAChBC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACVL,EAAWpC,IAAI,SAAC0C,EAAKC,GAAN,OACZN,EAAAC,EAAAC,cAAA,OACIE,UAAU,yBACVG,IAAKD,GAELN,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBAAsBE,EAAQ,GAC9CN,EAAAC,EAAAC,cAAA,QAAME,UAAU,qBAAqBC,EAAIG,MACzCR,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBAAsBC,EAAII,cDbxDC,GAFYd,EAEOe,OAFAlB,OAAO9B,IAAIiC,GAI9BgB,EAAe,SAAAJ,GAAI,OAAIE,EAAOG,KAAK,SAAAC,GAAK,OAAIA,EAAMC,SAASP,MA6GlDQ,EA3GK,CAAC,CACjBC,SAAUL,EAAa,oBACvBM,QAAS,YACTC,UAAU,EACVC,SAAS,GACV,CACCH,SAAYL,EAAa,UACzBM,QAAW,SACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,aACzBM,QAAW,YACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,UACzBM,QAAW,SACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,QACzBM,QAAW,OACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,UACzBM,QAAW,SACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,WACzBM,QAAW,UACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,UACzBM,QAAW,SACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,WACzBM,QAAW,UACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,YACzBM,QAAW,WACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,SACzBM,QAAW,QACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,QACzBM,QAAW,OACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,YACzBM,QAAW,WACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,SACzBM,QAAW,QACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,YACzBM,QAAW,WACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,SACzBM,QAAW,QACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,UACzBM,QAAW,SACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,WACzBM,QAAW,UACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,QACzBM,QAAW,OACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,QACzBM,QAAW,OACXC,UAAY,EACZC,SAAW,GACZ,CACCH,SAAYL,EAAa,SACzBM,QAAW,QACXC,UAAY,EACZC,SAAW,IE5GFC,EAAoB,CAC9B,CACGC,MAAO,OACPC,MAAO,OACPC,SAAU,GACV,CACAF,MAAO,SACPC,MAAO,SACPC,SAAU,IACV,CACAF,MAAO,OACPC,MAAO,OACPC,SAAU,KAWHC,EAAgB,SAAAC,GAC1B,IAAMV,EAPmB,SAAAU,GAEzB,OADiBC,EAAUC,KAAK,iBAAM,GAAMC,KAAKC,WACjCC,MAAM,EAAGL,GAKZM,CAAaN,GAE1B,OADmBV,EAAKiB,OAAOjB,GACbY,KAAK,iBAAM,GAAMC,KAAKC,2CCI5BI,SA1BF,SAAApC,GAA8D,IAA5DmB,EAA4DnB,EAA5DmB,SAAUC,EAAkDpB,EAAlDoB,QAASiB,EAAyCrC,EAAzCqC,iBAAkBC,EAAuBtC,EAAvBsC,SAAUC,EAAavC,EAAbuC,QAY1D,OACIrC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOkC,QATT,WACRD,GAEDF,EAAiBC,KAOhBC,EACGrC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcmC,IAAKtB,EAAUuB,IAAI,cAChDxC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,cAAcc,IAG/BlB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcmC,IAAKE,IAAUD,IAAKtB,OC+BlDwB,SArDC,SAAA5C,GAA0D,IAAxD6C,EAAwD7C,EAAxD6C,YAAaC,EAA2C9C,EAA3C8C,kBAAmBnC,EAAwBX,EAAxBW,MAAOoC,EAAiB/C,EAAjB+C,YAAiBC,EAClCC,mBAAS,IADyBC,EAAAtD,OAAAuD,EAAA,EAAAvD,CAAAoD,EAAA,GAC/DI,EAD+DF,EAAA,GACnDG,EADmDH,EAAA,GAAAI,EAEpBL,oBAAS,GAFWM,EAAA3D,OAAAuD,EAAA,EAAAvD,CAAA0D,EAAA,GAE/DE,EAF+DD,EAAA,GAE5CE,EAF4CF,EAAA,GAItEG,oBAAU,WACND,GAA4C,IAAvBX,GACrBa,QAAQC,IAAI,oBAAqBd,IAElC,CAACA,IAYJ,OACI5C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,gBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kCACXJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,+CACXK,IAGR6C,GACGtD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAAf,mBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+CACXJ,EAAAC,EAAAC,cAAA,SAAOyD,QAAQ,iBAAf,oBACA3D,EAAAC,EAAAC,cAAA,SACI0D,UAAU,YACVzE,GAAG,gBACH0E,UAAU,IACVC,SA7BD,SAAAxE,GACvB6D,EAAc7D,EAAEyE,OAAOxC,WA+BPvB,EAAAC,EAAAC,cAAA,UAAQoC,QA7BJ,WACpBK,EAAYC,GAAmBpC,KAAO0C,EACtCc,aAAaC,QAAQ,aAAcC,KAAKC,UAAUxB,IAClDY,GAAqB,GACrBV,GAAY,KAyBI,gBAIZ7C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQf,GAAG,aAAamD,QAAS,kBAAMO,GAAY,KAAnD,kBCkDDuB,SA7FF,SAAAtE,GAA4B,IAA1B4B,EAA0B5B,EAA1B4B,QAASmB,EAAiB/C,EAAjB+C,YAAiBC,EACGC,mBAAS,GADZC,EAAAtD,OAAAuD,EAAA,EAAAvD,CAAAoD,EAAA,GAChCuB,EADgCrB,EAAA,GACjBsB,EADiBtB,EAAA,GAAAI,EAEDL,oBAAS,GAFRM,EAAA3D,OAAAuD,EAAA,EAAAvD,CAAA0D,EAAA,GAEhCmB,EAFgClB,EAAA,GAEnBmB,EAFmBnB,EAAA,GAAAoB,EAGf1B,mBAAStB,EAAcC,IAHRgD,EAAAhF,OAAAuD,EAAA,EAAAvD,CAAA+E,EAAA,GAGhCzD,EAHgC0D,EAAA,GAG1BC,EAH0BD,EAAA,GAAAE,EAIb7B,mBAAS,GAJI8B,EAAAnF,OAAAuD,EAAA,EAAAvD,CAAAkF,EAAA,GAIhCnE,EAJgCoE,EAAA,GAIzBC,EAJyBD,EAAA,GAKjCE,EAAoB/D,EAAKgE,OAAO,SAAAC,GAAG,OAAKA,EAAI7D,UAAS8D,OAC3DzB,QAAQC,IAAIqB,GAEZ,IAAM5C,EAAmB,SAACC,GACxB,IAAImC,EAAJ,CACA,IAAIY,EAAed,EAAgB,EACnCC,EAAiBa,GACjB,IAAIC,EAAcpE,EAAKrD,IAAI,SAACsH,EAAK3E,GAAN,OAAgB8B,IAAa9B,EAAbZ,OAAA2F,EAAA,EAAA3F,CAAA,GAAyBuF,EAAzB,CAA8B9D,UAAU,IAAQ8D,IAK3F,GAJAN,EAAQS,GAIa,IAAjBD,EAAoB,CAEtB,IAAMG,EAAeF,EAAYJ,OAAO,SAAAC,GAAG,OAAIA,EAAI9D,WAG/CmE,EAAa,GAAGpE,UAAYoE,EAAa,GAAGpE,SAE9CkE,EAAcA,EAAYzH,IAAI,SAAAsH,GAAG,OAAIA,EAAI9D,SAAJzB,OAAA2F,EAAA,EAAA3F,CAAA,GAAmBuF,EAAnB,CAAwB9D,UAAU,EAAOC,SAAS,IAAQ6D,IAC/FE,EAAe,EACfR,EAAQS,GACRd,EAAiBa,GACjBL,EAASrE,EAAQ,MAIjB+D,GAAe,GACfM,EAASrE,EAAQ,IACjB8E,WAAW,WACTf,GAAe,GACfY,EAAcA,EAAYzH,IAAI,SAAAsH,GAAG,OAAIA,EAAI9D,SAAJzB,OAAA2F,EAAA,EAAA3F,CAAA,GAAmBuF,EAAnB,CAAwB9D,UAAU,IAAS8D,IAChFE,EAAe,EACfR,EAAQS,GACRd,EAAiBa,IAChB,SAMT,IAAKJ,EAAmB,CACtB,IACMhF,EAAamE,KAAKsB,MAAMxB,aAAayB,QAAQ,gBAAkB,GACrE1F,EAAW2F,KAAK,CAACjF,UACjB,IAAMkC,EAAc5C,EAAW6B,KAAK,SAAC3B,EAAE0F,GAAH,OAASA,EAAElF,MAAQR,EAAEQ,QACrDkC,EAAYuC,QAJM,IAImBvC,EAAYuC,OAJ/B,GAKtB,IAAMtC,EAAoBD,EAAYiD,UAAU,SAAAC,GAAM,OAAKA,EAAOrF,OAIlE,OAH2B,IAAvBoC,GACFoB,aAAaC,QAAQ,aAAcC,KAAKC,UAAUxB,IAGlD3C,EAAAC,EAAAC,cAAC4F,EAAD,CACEnD,YAAaA,EACbC,kBAAmBA,EACnBnC,MAAOA,EACPoC,YAAaA,IAKnB,OACE7C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAAf,UAA6CK,IAEjDT,EAAAC,EAAAC,cAAA,UAAQf,GAAG,eAAemD,QAAS,kBAAMO,GAAY,KAArD,eAEF7C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACZY,EAAKrD,IAAI,SAACsH,EAAK3E,GACd,OACEN,EAAAC,EAAAC,cAAC6F,EAAD,CACE7E,QAAS+D,EAAI/D,QACbD,SAAUgE,EAAIhE,SACdoB,QAAS4C,EAAI9D,UAAY8D,EAAI7D,QAC7Be,iBAAkBA,EAClBC,SAAU9B,EACVC,IAAKD,UCzBJ0F,EA3DH,WAAM,IAAAlD,EACsBC,mBAAS,QAD/BC,EAAAtD,OAAAuD,EAAA,EAAAvD,CAAAoD,EAAA,GACPmD,EADOjD,EAAA,GACKkD,EADLlD,EAAA,GAAAI,EAEkBL,oBAAS,GAF3BM,EAAA3D,OAAAuD,EAAA,EAAAvD,CAAA0D,EAAA,GAEP+C,EAFO9C,EAAA,GAEGR,EAFHQ,EAAA,GASRtD,EJeAmE,KAAKsB,MAAMxB,aAAayB,QAAQ,eAAe7D,KAAK,SAAC3B,EAAE0F,GAAH,OAASA,EAAElF,MAAQR,EAAEQ,QIb/E,OAEIT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACV+F,EACGnG,EAAAC,EAAAC,cAACkG,EAAD,CACI1E,QAASL,EAAkBR,KAAK,SAAAwF,GAAC,OAAIA,EAAE9E,QAAU0E,IAAYzE,SAC7DqB,YAAaA,IAGjB7C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,qDAGJF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,wBACTiB,EAAkB1D,IAAI,SAAA0I,GAAC,OACpBrG,EAAAC,EAAAC,cAAA,MACIK,IAAK8F,EAAE/E,MAAOlB,UAAU,kCACxBkC,QAAS,kBA1BNf,EA0BmC8E,EAAE9E,MAzBhEkC,QAAQC,IAAInC,QACZ2E,EAAc3E,GAFa,IAAAA,IA4BHvB,EAAAC,EAAAC,cAAA,SACIf,GAAE,gBAAA8C,OAAkBoE,EAAE9E,OACtB+E,KAAK,QACL9F,KAAK,aACLe,MAAO8E,EAAE/E,MACTiF,QAASF,EAAE9E,QAAU0E,IAEzBjG,EAAAC,EAAAC,cAAA,SAAOyD,QAAO,gBAAA1B,OAAkBoE,EAAE9E,QAAU8E,EAAE/E,WAK1DtB,EAAAC,EAAAC,cAAA,UAAQf,GAAG,cAAcmD,QAAS,kBAAMO,GAAY,KAApD,QAEC9C,EAAWmF,OAAS,GACjBlF,EAAAC,EAAAC,cAACsG,EAAD,CACIzG,WAAYA,OC7CpB0G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/G,EAAAC,EAAAC,cAAC8G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.496c2b79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat-pattern.f6cc3aa1.png\";","var map = {\n\t\"./Angeweena-Joween.jpg\": 14,\n\t\"./Birdie.jpg\": 15,\n\t\"./Breakfast.jpg\": 16,\n\t\"./Chumba.jpg\": 17,\n\t\"./Cleo.jpg\": 18,\n\t\"./Cookie.jpg\": 19,\n\t\"./Cupcake.jpg\": 20,\n\t\"./Dinner.jpg\": 21,\n\t\"./Fartima.jpg\": 22,\n\t\"./Franklin.jpg\": 23,\n\t\"./Holla.jpg\": 24,\n\t\"./Liam.jpg\": 25,\n\t\"./Liberace.jpg\": 26,\n\t\"./Lunch.jpg\": 27,\n\t\"./Meatloaf.jpg\": 28,\n\t\"./Nacho.jpg\": 29,\n\t\"./Noodle.jpg\": 30,\n\t\"./Nutella.jpg\": 31,\n\t\"./Tony.jpg\": 32,\n\t\"./Ween.jpg\": 33,\n\t\"./Wumba.jpg\": 34\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;","module.exports = __webpack_public_path__ + \"static/media/Angeweena-Joween.a38c2740.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Birdie.9ab76da2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Breakfast.a06222af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Chumba.7a100649.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Cleo.5a666bd9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Cookie.f42cb538.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Cupcake.01d35419.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Dinner.8e0cb1f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Fartima.7e9783b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Franklin.f8d91172.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Holla.7509d76c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Liam.db01fabe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Liberace.a8f45f1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Lunch.0631650a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Meatloaf.dd9e28eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Nacho.73b19512.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Noodle.2cc132f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Nutella.effbd03e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tony.90d9ad6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ween.0996506c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Wumba.01bc7944.jpg\";","const importAll = r => r.keys().map(r)\r\n\r\nconst images = importAll(require.context('./images', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nconst findCatImage = name => images.find(image => image.includes(name))\r\n\r\nexport const cats = [{\r\n    catImage: findCatImage(\"Angeweena-Joween\"),\r\n    catName: \"Angeweena\",\r\n    selected: false,\r\n    matched: false\r\n}, {\r\n    \"catImage\": findCatImage(\"Birdie\"),\r\n    \"catName\": \"Birdie\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Breakfast\"),\r\n    \"catName\": \"Breakfast\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Chumba\"),\r\n    \"catName\": \"Chumba\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Cleo\"),\r\n    \"catName\": \"Cleo\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Cookie\"),\r\n    \"catName\": \"Cookie\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Cupcake\"),\r\n    \"catName\": \"Cupcake\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Dinner\"),\r\n    \"catName\": \"Dinner\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Fartima\"),\r\n    \"catName\": \"Fartima\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Franklin\"),\r\n    \"catName\": \"Franklin\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Holla\"),\r\n    \"catName\": \"Holla\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Liam\"),\r\n    \"catName\": \"Liam\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Liberace\"),\r\n    \"catName\": \"Liberace\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Lunch\"),\r\n    \"catName\": \"Lunch\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Meatloaf\"),\r\n    \"catName\": \"Meatloaf\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Nacho\"),\r\n    \"catName\": \"Nacho\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Noodle\"),\r\n    \"catName\": \"Noodle\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Nutella\"),\r\n    \"catName\": \"Nutella\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Tony\"),\r\n    \"catName\": \"Tony\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Ween\"),\r\n    \"catName\": \"Ween\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}, {\r\n    \"catImage\": findCatImage(\"Wumba\"),\r\n    \"catName\": \"Wumba\",\r\n    \"selected\": false,\r\n    \"matched\": false\r\n}]\r\n\r\nexport default cats","import React from \"react\"\r\n\r\nimport './Leaderboard.scss'\r\n\r\nconst Leaderboard = ({highScores}) => (\r\n    <>\r\n        <h3>High Scores</h3>\r\n        <div className=\"Leaderboard__score-list\">\r\n            {highScores.map((row, index) => (\r\n                <div\r\n                    className=\"Leaderboard__score-row\"\r\n                    key={index}\r\n                >\r\n                    <span className=\"Leaderboard__place\">{index + 1}</span>\r\n                    <span className=\"Leaderboard__name\">{row.name}</span>\r\n                    <span className=\"Leaderboard__score\">{row.score}</span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </>   \r\n)\r\n\r\nexport default Leaderboard   ","import catsArray from \"./cats\"\r\n\r\nexport const difficultyOptions = [\r\n   {\r\n      label: 'Easy',\r\n      value: 'easy',\r\n      catCount: 5\r\n   }, {\r\n      label: 'Medium',\r\n      value: 'medium',\r\n      catCount: 10\r\n   }, {\r\n      label: 'Hard',\r\n      value: 'hard',\r\n      catCount: 15\r\n   }\r\n]\r\n\r\n// Randomizes cats array and truncates it based on numCats\r\nexport const truncateCats = numCats => {\r\n   const randCats = catsArray.sort(() => 0.5 - Math.random())\r\n   return randCats.slice(0, numCats)\r\n}\r\n\r\n// Doubles the array to create matches and randomizes the order of display\r\nexport const doubleShuffle = numCats => {\r\n   const cats = truncateCats(numCats)\r\n   const doubleCats = cats.concat(cats)\r\n   return doubleCats.sort(() => 0.5 - Math.random())\r\n}\r\n\r\n// Gets array of high scores from local storage and orders them from largest to smallest if not already ordered\r\nexport const getOrderedLeaderboard = () => {\r\n   return JSON.parse(localStorage.getItem('highScores')).sort((a,b) => b.score - a.score)\r\n}\r\n","import React from \"react\";\r\n\r\nimport cardBack from \"./cat-pattern.png\"\r\n\r\nimport './Card.scss'\r\n\r\nconst Card = ({catImage, catName, cardClickHandler, catIndex, flipped}) => {\r\n    // State and state set function. useState is a function that gets passed an initial value and returns an array of the state (flipped) and a function to update the state (setFlipped)\r\n    // const [flipped, setFlipped] = useState(false)\r\n    // Only flip cards face up, not face down\r\n    const flipCard = () => {\r\n        if (!flipped) {\r\n            // setFlipped(true)\r\n            cardClickHandler(catIndex)\r\n        }\r\n        // TODO: Add else statement warning for already been clicked\r\n    }\r\n\r\n    return (\r\n        <div className=\"Card\" onClick={flipCard}>\r\n            {flipped ? (\r\n                <div className=\"Card__box\">\r\n                    <img className=\"Card__image\" src={catImage} alt='card-back' />\r\n                    <p className=\"Card__name\">{catName}</p>\r\n                </div>\r\n            ) : (\r\n                <img className=\"Card__image\" src={cardBack} alt={catName} />                    \r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React, {useState, useEffect} from \"react\"\r\n\r\nimport './GameEnd.scss'\r\n\r\nconst GameEnd = ({leaderBoard, newHighScorePlace, score, setGamePlay}) => {\r\n    const [leaderName, setLeaderName] = useState('')\r\n    const [showEnterInitials, setShowEnterInitials] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setShowEnterInitials(newHighScorePlace !== -1)\r\n        console.log('newHighScorePlace', newHighScorePlace)        \r\n\r\n    }, [newHighScorePlace])\r\n\r\n    const onChangeLeaderName = e => {\r\n        setLeaderName(e.target.value)\r\n    }\r\n    const onSaveHighScore = () => {\r\n        leaderBoard[newHighScorePlace].name = leaderName\r\n        localStorage.setItem('highScores', JSON.stringify(leaderBoard))\r\n        setShowEnterInitials(false)\r\n        setGamePlay(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>CONGRATULATIONS!! You won!</h1>\r\n            <div className=\"GameEnd__score-caption\">Final Score:</div>\r\n            <div className=\"GameEnd__final-score-container\">\r\n                <span className=\"GameEnd__final-score-container__final-score\">\r\n                    {score}\r\n                </span>\r\n            </div>\r\n            {showEnterInitials && (\r\n                <div>\r\n                    <div className=\"GameEnd__high-score\">New high score!</div>\r\n                    <div className=\"GameEnd__save-high-score\">\r\n                        <div className=\"GameEnd__save-high-score__initial-container\">\r\n                            <label htmlFor=\"initial-input\">Enter your name:</label>\r\n                            <input \r\n                                autoFocus=\"autofocus\"\r\n                                id=\"initial-input\" \r\n                                maxLength=\"9\" \r\n                                onChange={onChangeLeaderName}\r\n                            />\r\n                        </div>\r\n                        <button onClick={onSaveHighScore}>Save score</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div>\r\n                <button id=\"play-again\" onClick={() => setGamePlay(false)}>Play Again</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameEnd","import React, {useState} from 'react'\r\n\r\nimport Card from \"../Card/Card\"\r\nimport GameEnd from \"../GameEnd/GameEnd\"\r\nimport {doubleShuffle} from \"../../utils\"\r\n\r\nimport './Game.scss'\r\n\r\nconst Game = ({numCats, setGamePlay}) => {\r\n  const [selectedCount, setSelectedCount] = useState(0)\r\n  const [blockClicks, setBlockClicks] = useState(false)\r\n  const [cats, setCats] = useState(doubleShuffle(numCats))\r\n  const [score, setScore] = useState(0)\r\n  const unmatchedCatCount = cats.filter(cat => !cat.matched).length\r\n  console.log(unmatchedCatCount)\r\n\r\n  const cardClickHandler = (catIndex) => {\r\n    if (blockClicks) return\r\n    let updatedCount = selectedCount + 1\r\n    setSelectedCount(updatedCount)\r\n    let updatedCats = cats.map((cat, index) => catIndex === index ? {...cat, selected: true} : cat)\r\n    setCats(updatedCats)\r\n    // Update the cats array\r\n    // ... is a spread function, it adds everything that it had before back into the object. \r\n    // Then, we update only flipped. Because if you redefine something that's already there, it overwrites it.\r\n    if (updatedCount === 2) {\r\n      // Make a new array that only has the flipped cats\r\n      const selectedCats = updatedCats.filter(cat => cat.selected)\r\n\r\n      // If it's a match:\r\n      if (selectedCats[0].catName === selectedCats[1].catName) {\r\n        // Set matched to true for the selected cats\r\n        updatedCats = updatedCats.map(cat => cat.selected ? {...cat, selected: false, matched: true} : cat)\r\n        updatedCount = 0\r\n        setCats(updatedCats)\r\n        setSelectedCount(updatedCount)\r\n        setScore(score + 20)\r\n\r\n      // If it's not a match:\r\n      } else {\r\n        setBlockClicks(true)\r\n        setScore(score - 10)\r\n        setTimeout(() => {\r\n          setBlockClicks(false)\r\n          updatedCats = updatedCats.map(cat => cat.selected ? {...cat, selected: false} : cat)\r\n          updatedCount = 0\r\n          setCats(updatedCats)\r\n          setSelectedCount(updatedCount)\r\n        }, 2000)\r\n      }\r\n    } \r\n  }\r\n\r\n  //End of game\r\n  if (!unmatchedCatCount) {\r\n    const numHighScores = 5\r\n    const highScores = JSON.parse(localStorage.getItem('highScores')) || []\r\n    highScores.push({score})\r\n    const leaderBoard = highScores.sort((a,b) => b.score - a.score)\r\n    if (leaderBoard.length >= numHighScores) leaderBoard.length = (numHighScores)\r\n    const newHighScorePlace = leaderBoard.findIndex(leader => !leader.name)\r\n    if (newHighScorePlace === -1) {\r\n      localStorage.setItem('highScores', JSON.stringify(leaderBoard))\r\n    }\r\n    return (\r\n      <GameEnd\r\n        leaderBoard={leaderBoard}\r\n        newHighScorePlace={newHighScorePlace}\r\n        score={score}\r\n        setGamePlay={setGamePlay}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"Game\">\r\n      <div className=\"Game__header\">\r\n        <h1>Kitten Matching Game</h1>\r\n        <div className=\"Scoreboard\">\r\n            <h2>Flip the cards to match the foster kittens</h2>\r\n            <div className=\"Game__score-display\">Score: {score}</div>\r\n        </div>\r\n        <button id=\"reset-button\" onClick={() => setGamePlay(false)}>Reset Game</button>\r\n      </div>\r\n      <div className=\"Game__card-container\">\r\n        {cats.map((cat, index) => {\r\n          return (\r\n            <Card \r\n              catName={cat.catName}\r\n              catImage={cat.catImage}\r\n              flipped={cat.selected || cat.matched}\r\n              cardClickHandler={cardClickHandler}\r\n              catIndex={index}\r\n              key={index}\r\n            />\r\n        )})}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n\r\n// Future improvements:\r\n// - Timer\r\n// - Printable certificate for winning\r\n// - Save difficulty","import React, {useState} from \"react\"\r\nimport Leaderboard from \"./Leaderboard/Leaderboard\"\r\nimport {difficultyOptions, getOrderedLeaderboard} from \"../utils\"\r\n\r\nimport './App.scss'\r\nimport Game from \"./Game/Game\"\r\n\r\n//TODO: play game onclick handler\r\n\r\nconst App = () => {\r\n    const [difficulty, setDifficulty] = useState('easy')\r\n    const [gamePlay, setGamePlay] = useState(false)\r\n\r\n    const handleDifficultyChange = value => {\r\n        console.log(value)\r\n        setDifficulty(value)\r\n    }\r\n\r\n    const highScores = getOrderedLeaderboard()\r\n\r\n    return (\r\n\r\n        <div className=\"App\">\r\n            {gamePlay ? (\r\n                <Game\r\n                    numCats={difficultyOptions.find(d => d.value === difficulty).catCount}\r\n                    setGamePlay={setGamePlay}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <div>\r\n                        <h1>Kitten Matching Game</h1>\r\n                        <h2>A feline friendly game made with React</h2>\r\n                    </div>\r\n                    \r\n                    <ul className=\"App__difficulty-form\">\r\n                        {difficultyOptions.map(d => (\r\n                            <li \r\n                                key={d.label} className=\"App__difficulty-form__container\"\r\n                                onClick={() => handleDifficultyChange(d.value)}\r\n                            >\r\n                                <input\r\n                                    id={`radio-button-${d.value}`}\r\n                                    type=\"radio\"\r\n                                    name=\"difficulty\"\r\n                                    value={d.label}\r\n                                    checked={d.value === difficulty}\r\n                                />\r\n                                <label htmlFor={`radio-button-${d.value}`}>{d.label}</label>\r\n                            </li>\r\n                        ))}\r\n                    </ul> \r\n\r\n                    <button id=\"play-button\" onClick={() => setGamePlay(true)}>Play</button>\r\n                                        \r\n                    {highScores.length > 0 && \r\n                        <Leaderboard\r\n                            highScores={highScores}\r\n                        />\r\n                    }\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n//<button onClick={() => resetGame(difficultyOptions.find(d => d.value === difficulty).catCount)}>Play{!!score && \" Again\"}</button>\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}